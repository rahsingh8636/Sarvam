apiVersion: v1
kind: Namespace
metadata:
  name: argo-rollouts
  labels:
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/instance: argo-rollouts
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-rollouts
  namespace: argo-rollouts
  labels:
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/instance: argo-rollouts
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-rollouts
  labels:
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/instance: argo-rollouts
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - events
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  - rollouts/status
  - rollouts/finalizers
  - experiments
  - experiments/status
  - experiments/finalizers
  - analysistemplates
  - analysistemplates/finalizers
  - clusteranalysistemplates
  - clusteranalysistemplates/finalizers
  - analysisruns
  - analysisruns/status
  - analysisruns/finalizers
  verbs:
  - get
  - list
  - watch
  - patch
  - update
  - delete
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-rollouts
  labels:
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/instance: argo-rollouts
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-rollouts
subjects:
- kind: ServiceAccount
  name: argo-rollouts
  namespace: argo-rollouts
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-rollouts-controller
  namespace: argo-rollouts
  labels:
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/instance: argo-rollouts
    app.kubernetes.io/component: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argo-rollouts
      app.kubernetes.io/instance: argo-rollouts
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argo-rollouts
        app.kubernetes.io/instance: argo-rollouts
        app.kubernetes.io/component: controller
    spec:
      serviceAccountName: argo-rollouts
      containers:
      - name: argo-rollouts-controller
        image: quay.io/argoproj/argo-rollouts:v1.6.0
        args:
        - --namespaced
        - --instance-id=canary-demo
        ports:
        - containerPort: 8080
          name: metrics
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: argo-rollouts-metrics
  namespace: argo-rollouts
  labels:
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/instance: argo-rollouts
    app.kubernetes.io/component: controller
spec:
  ports:
  - name: metrics
    port: 8080
    targetPort: metrics
  selector:
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/instance: argo-rollouts
    app.kubernetes.io/component: controller 